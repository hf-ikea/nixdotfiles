<<<<<<< HEAD
# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "uas" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/857a3b62-4839-4389-a336-63b0d1b387f6";
      fsType = "btrfs";
      options = [ "subvol=root" "compress=zstd" "noatime" ];
      neededForBoot = true;
    };

  fileSystems."/nix" =
    {
      device = "/dev/disk/by-uuid/857a3b62-4839-4389-a336-63b0d1b387f6";
      fsType = "btrfs";
      options = [ "subvol=nix" "compress=zstd" "noatime" ];
      neededForBoot = true;
    };

  fileSystems."/home" =
    {
      device = "/dev/disk/by-uuid/857a3b62-4839-4389-a336-63b0d1b387f6";
      fsType = "btrfs";
      options = [ "subvol=home" "compress=zstd" "noatime" ];
      neededForBoot = true;
    };

  fileSystems."/persist" =
    {
      device = "/dev/disk/by-uuid/857a3b62-4839-4389-a336-63b0d1b387f6";
      fsType = "btrfs";
      options = [ "subvol=persist" "compress=zstd" "noatime" ];
      neededForBoot = true;
    };

  fileSystems."/var/log" =
    {
      device = "/dev/disk/by-uuid/857a3b62-4839-4389-a336-63b0d1b387f6";
      fsType = "btrfs";
      options = [ "subvol=log" "compress=zstd" "noatime" ];
      neededForBoot = true;
    };

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-uuid/AF0B-269B";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp3s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
=======
{ config
, lib
, pkgs
, modulesPath
, ...
}:
let
  rootDevice = "/dev/vda";
  efiPart = "/dev/disk/by-uuid/XXXX-XXXX";
in
{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  fileSystems = {
    "/" = {
      device = rootDevice;
      fsType = "btrfs";
      neededForBoot = true;
      options = [ "compress=zstd" "noatime" "subvol=rootfs" "mode=755" ]; # mode=755 so only root can write to those files
    };
    "/persist" = {
      device = rootDevice;
      fsType = "btrfs";
      neededForBoot = true;
      options = [ "compress=zstd" "noatime" "subvol=persist" ];
    };
    "/nix" = {
      device = rootDevice;
      fsType = "btrfs";
      neededForBoot = true;
      options = [ "compress=zstd" "noatime" "subvol=nix" ];
    };
    "/boot" = {
      device = efiPart;
      fsType = "vfat";
    };
  };
>>>>>>> 375d3bd723cfe3dad5f7e02ab3fcb367b92ae90a
}
